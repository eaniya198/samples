apiVersion: eksctl.io/v1alpha5
kind: ClusterConfig

metadata:
  name: project-cluster
  version: "1.25"
  region: ap-northeast-2
#   tags:
#     karpenter.sh/discovery: project-cluster

# karpenter:
#   version: 'v0.27.3' # Exact version must be provided
#   createServiceAccount: true # default is false
#   withSpotInterruptionQueue: true # adds all required policies and rules for supporting Spot Interruption Queue, default is false

# eksctl utils update-cluster-endpoints --name=wsi-api-cluster --private-access=true --public-access=false

vpc:
  subnets:
    public:
      public-a: { id: subnet-098b2dd473709301a }
      public-b: { id: subnet-0b216419379f9dbca }
    private:
      private-a: { id: subnet-0d297c443b5125fac }
      private-b: { id: subnet-0a4a475d34641af0f }

iamIdentityMappings:
  - arn: arn:aws:iam::216713689620:role/poweruser
    groups:
      - system:masters
    username: admin
    noDuplicateARNs: true # prevents shadowing of ARNs

iam:
  withOIDC: true
  serviceAccounts:
  - metadata:
      name: appmesh-controller
      namespace: appmesh-system
    attachPolicyARNs:
      - "arn:aws:iam::aws:policy/AWSCloudMapFullAccess"
      - "arn:aws:iam::aws:policy/AWSAppMeshFullAccess"
  - metadata:
      name: aws-load-balancer-controller
      namespace: kube-system
    wellKnownPolicies:
      awsLoadBalancerController: true
  - metadata:
      name: ebs-csi-controller-sa
      namespace: kube-system
    wellKnownPolicies:
      ebsCSIController: true
  - metadata:
      name: efs-csi-controller-sa
      namespace: kube-system
    wellKnownPolicies:
      efsCSIController: true
  - metadata:
      name: external-dns
      namespace: kube-system
    wellKnownPolicies:
      externalDNS: true
  - metadata:
      name: cert-manager
      namespace: cert-manager
    wellKnownPolicies:
      certManager: true
  - metadata:
      name: cluster-autoscaler
      namespace: kube-system
      labels: {aws-usage: "cluster-ops"}
    wellKnownPolicies:
      autoScaler: true
  - metadata:
      name: build-service
      namespace: ci-cd
    wellKnownPolicies:
      imageBuilder: true
  - metadata:
      name: autoscaler-service
      namespace: kube-system
    attachPolicy:
      Version: "2012-10-17"
      Statement:
      - Effect: Allow
        Action:
        - "autoscaling:DescribeAutoScalingGroups"
        - "autoscaling:DescribeAutoScalingInstances"
        - "autoscaling:DescribeLaunchConfigurations"
        - "autoscaling:DescribeTags"
        - "autoscaling:SetDesiredCapacity"
        - "autoscaling:TerminateInstanceInAutoScalingGroup"
        - "ec2:DescribeLaunchTemplateVersions"
        Resource: '*'

managedNodeGroups:
  - name: project-app-ng
    labels: { role: apps }
    instanceType: t3.medium
    securityGroups:
      attachIDs: ["sg-09c39ad7b61cfb7b3"]
    instanceName: project-app-ng
    desiredCapacity: 2
    minSize: 2
    maxSize: 20
    privateNetworking: true
    volumeType: gp2
    volumeEncrypted: true
    subnets:
      - private-a
      - private-b


    # taints:
    #   - key: kubernetes.io/metadata.name
    #     value: "kube-system"
    #     effect: NoSchedule
    tags:
      k8s.io/cluster-autoscaler/enabled: "true"
      k8s.io/cluster-autoscaler/project-cluster: "owned"
    iam:
      withAddonPolicies:
        imageBuilder: true
        externalDNS: true
        certManager: true

  - name: project-addon-ng
    labels: { role: addons }
    instanceType: t3.medium
    instanceName: project-addon-ng
    desiredCapacity: 2
    minSize: 2
    maxSize: 20
    privateNetworking: true
    # availabilityZones: ["ap-northeast-2a", "ap-northeast-2b"]
    volumeType: gp2
    volumeEncrypted: true
    ## volumeKmsKeyID옵션 없으면 알아서 생성 됌
    # volumeKmsKeyID: 36c0b54e-64ed-4f2d-a1c7-96558764311e # please see https://docs.aws.amazon.com/autoscaling/ec2/userguide/key-policy-requirements-EBS-encryption.html for service-linked role permissions
    tags:
      k8s.io/cluster-autoscaler/enabled: "true"
      k8s.io/cluster-autoscaler/project-cluster: "owned"
    iam:
      withAddonPolicies:
        imageBuilder: true
        externalDNS: true
        certManager: true