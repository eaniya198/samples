Parameters:
  AutoScalingGroupName:
    Type: String
    Description: "The Name of Auto Scaling Group"
    Default: cfn-example-asg

  SubnetIds:
    Type: List<AWS::EC2::Subnet::Id>
    Description: "The Subnet Ids for launched instances"

  SecurityGroupIds:
    Type: List<AWS::EC2::SecurityGroup::Id>
    Description: "The Security Group Ids for launched instances"

  KeyPair:
    Type: AWS::EC2::KeyPair::KeyName
    Description: "The Keypair for launched instances"

  AMI:
    Type: "AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>"
    Description: "The AMI for launched instances"
    Default: "/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2"

  TargetGroupARNs:
    Type: CommaDelimitedList
    Description: "The Target Group Arns that will be attached instance to alb"

  InstanceType:
    Type: String
    Description: "Instance type for instances"
    Default: t3.medium

  Project:
    Type: String
    Description: "The project name for provisioned this resources"
    Default: wsi

  Owner:
    Type: String
    Description: "The team name for owned this resources"
    Default: hmoon

Resources:
  #
  # IAM Role
  #
  Role:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${AutoScalingGroupName}-role"
      Description: !Sub "The role for ${AutoScalingGroupName}"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - "sts:AssumeRole"
            Principal:
              Service:
                - ec2.amazonaws.com
      # Policies:
      #   - PolicyName: dynamodb-query
      #     PolicyDocument:
      #       Version: "2012-10-17"
      #       Statement:
      #         - Effect: Allow
      #           Action:
      #             - 'dynamodb:Query'
      #             - 'dynamodb:Scan'
      #           Resource: '*'
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonS3ReadOnlyAccess
        - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore
        - arn:aws:iam::aws:policy/CloudWatchAgentServerPolicy
      Tags:
        - Key: Project
          Value: !Ref Project
        - Key: Owner
          Value: !Ref Owner

  #
  # IAM Instance Profile
  #
  InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      # InstanceProfileName: example-worker-instance-profile
      Path: /
      Roles:
        - !Ref Role

  #
  # LaunchTemplate
  #
  LaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateName: !Sub "${AutoScalingGroupName}-lt"
      TagSpecifications:
        - ResourceType: launch-template
          Tags:
            - Key: Name
              Value: !Sub "${AutoScalingGroupName}-lt"
      LaunchTemplateData:
        BlockDeviceMappings:
          - DeviceName: /dev/xvda
            Ebs:
              DeleteOnTermination: true
              VolumeType: gp3
              VolumeSize: 10
              Iops: 3000
              Throughput: 125
              Encrypted: true
              # KmsKeyId: String
        IamInstanceProfile:
          Arn: !GetAtt InstanceProfile.Arn
          # Name: String
        ImageId: !Ref AMI
        InstanceInitiatedShutdownBehavior: terminate # stop , terminate
        InstanceType: !Ref InstanceType
        KeyName: !Ref KeyPair
        Monitoring: # detailed monitoring
          Enabled: true
        SecurityGroupIds: !Ref SecurityGroupIds
        TagSpecifications:
          - ResourceType: instance # instance, volume
            Tags:
              - Key: Name
                Value: !Sub "${AutoScalingGroupName}-worker"
              - Key: Project
                Value: !Ref Project
              - Key: Owner
                Value: !Ref Owner
          - ResourceType: volume # instance, volume
            Tags:
              - Key: Name
                Value: !Sub "${AutoScalingGroupName}-worker"
              - Key: Project
                Value: !Ref Project
              - Key: Owner
                Value: !Ref Owner
        UserData:
          Fn::Base64: |
            #!/bin/bash -xe
            yum update -y

            #### install pypy3 ####
            cd /etc

            wget https://downloads.python.org/pypy/pypy3.9-v7.3.11-linux64.tar.bz2
            tar -xf pypy3.9-v7.3.11-linux64.tar.bz2
            ln -s /etc/pypy3.9-v7.3.11-linux64/bin/pypy3.9 /usr/bin/pypy3
            pypy3 -m ensurepip
            pypy3 -m pip install virtualenv

            #### install codedeploy-agent ####
            yum install ruby wget -y

            cd /home/ec2-user
            wget https://aws-codedeploy-us-east-1.s3.us-east-1.amazonaws.com/latest/install
            chmod +x ./install
            ./install auto

            systemctl enable codedeploy-agent --now

            #### install cloudwatch-agent ####
            
            # Get the latest cloudwatch-agent package
            yum install -y amazon-cloudwatch-agent
            systemctl enable amazon-cloudwatch-agent --now

  #
  # Auto Scaling Group
  #
  AutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AutoScalingGroupName: !Ref AutoScalingGroupName
      # CapacityRebalance: Boolean
      Cooldown: "120"
      DesiredCapacityType: units # units , vcpu , memory-mib
      DesiredCapacity: "2"
      MinSize: "2"
      MaxSize: "20"
      HealthCheckGracePeriod: 60
      HealthCheckType: ELB # EC2 , ELB
      LaunchTemplate:
        LaunchTemplateId: !Ref LaunchTemplate
        Version: !GetAtt LaunchTemplate.LatestVersionNumber # DefaultVersionNumber , LatestVersionNumber
      Tags:
        - PropagateAtLaunch: true
          Key: Name
          Value: !Sub "${AutoScalingGroupName}-worker"
      TargetGroupARNs: !Ref TargetGroupARNs
      VPCZoneIdentifier: !Ref SubnetIds

  #
  # Scaling Policy
  #
  TargetTrackingScalingPolicy:
    Type: AWS::AutoScaling::ScalingPolicy
    Properties:
      PolicyType: TargetTrackingScaling # TargetTrackingScaling | StepScaling | SimpleScaling
      AutoScalingGroupName: !Ref AutoScalingGroup
      TargetTrackingConfiguration:
        DisableScaleIn: False
        PredefinedMetricSpecification:
          # Available Value : ASGAverageCPUUtilization | ASGAverageNetworkIn | ASGAverageNetworkOut | ALBRequestCountPerTarget
          PredefinedMetricType: ASGAverageCPUUtilization
          # ResourceLabel: String # When Using ALBRequestCountPerTarget
        TargetValue: 60
